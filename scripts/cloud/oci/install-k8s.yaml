- import_playbook: "{{ playbook_dir }}/configure-common.yaml"
- hosts: k8s
  become: true
  vars:
    k8s_baseurl: https://pkgs.k8s.io/core:/stable:/v{{ k8s_version }}/rpm
    cri_dockerd_baseurl: https://github.com/Mirantis/cri-dockerd/releases/download
    calico_baseurl: https://github.com/projectcalico/calico/releases/download
    download_arch: "{{ (ansible_architecture == 'aarch64') | ternary('arm64', 'amd64') }}"

  tasks:
    - name: include vars
      include_vars: "{{ playbook_dir }}/config-vars.yaml"
      tags: always

    - name: Add k8s repository
      yum_repository:
        name: k8s_repo
        description: Kubernetes Repository
        baseurl: "{{ k8s_baseurl }}"

    - name: Verify k8s GPG keys
      rpm_key:
        key: "{{ k8s_baseurl }}/repodata/repomd.xml.key"

    - name: Install k8s
      package:
        name:
          - kubeadm
          - kubelet
          - kubectl
          - python3-pip
        state: latest
        update_cache: yes
      notify:
        - Reload k8s

    - name: Create K8s configuration directory
      file:
        dest: /etc/kubernetes
        state: directory

    - name: Create kubelet config
      copy:
        dest: /etc/kubernetes/node-config.yaml
        src: "{{ playbook_dir }}/k8s/node-config.yaml"

    - name: Install github3 library
      pip:
        name: github3.py

    - name: Obtain latest cri-dockerd release
      github_release:
        user: Mirantis
        repo: cri-dockerd
        action: latest_release
      register: cri_dockerd_latest

    - name: Download cri-dockerd binary
      unarchive:
        src: >-
          {{ cri_dockerd_baseurl }}/{{ cri_dockerd_latest['tag'] }}/cri-dockerd-{{ cri_dockerd_latest['tag']
          | regex_replace('^v','') }}.{{ download_arch }}.tgz
        dest: /usr/local/libexec
        remote_src: true
        extra_opts:
          - --strip=1

    - name: Install cri-dockerd service
      copy:
        dest: /etc/systemd/system/cri-dockerd.service
        content: |
          [Service]
          ExecStart=/usr/local/libexec/cri-dockerd --pod-infra-container-image registry.k8s.io/pause:{{ pause_container_version }}

          [Install]
          WantedBy=multi-user.target
      notify:
        - Reload systemd
        - Reload cri-dockerd

    - name: Obtain latest calicoctl release
      github_release:
        user: projectcalico
        repo: calico
        action: latest_release
      register: calico_latest

    - name: Download calicoctl binary
      get_url:
        url: >-
          {{ calico_baseurl }}/{{ calico_latest['tag'] }}/calicoctl-{{ ansible_system | lower }}-{{ download_arch }}
        dest: /usr/local/bin/calicoctl
        mode: '755'

    - name: Enable and Start CRI Docker
      service:
        name: 'cri-dockerd'
        enabled: true
        state: started

    - name: Enable and Start k8s
      service:
        name: 'kubelet'
        enabled: true
        state: started

    - name: Open k8s ports (firewall)
      firewalld:
        port: "{{ item }}/tcp"
        state: enabled
        immediate: true
        permanent: true
      loop:
        - 6443
        - 10250

  handlers:
    - name: Reload systemd
      systemd_service:
        daemon_reload: true

    - name: Reload k8s
      service:
        name: 'kubelet'
        state: restarted

    - name: Reload cri-dockerd
      service:
        name: 'cri-dockerd'
        state: restarted
