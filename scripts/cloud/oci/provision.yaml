- hosts: localhost
  gather_facts: false
  collections:
    - oracle.oci
  vars:
    zero_cidr: "0.0.0.0/0"
    user_override: |
      #cloud-config
      system_info:
        default_user:
          name: flowlogix
  tasks:
  - name: include vars
    include_vars: "{{ playbook_dir }}/config-vars.yaml"

  - name: Create VCNs
    oci_network_vcn:
      compartment_id: "{{ compartment_id }}"
      display_name: "{{ lookup('vars', item + '_network_name') }}"
      dns_label: "{{ item }}"
      cidr_block: 10.0.0.0/16
    register: network
    loop:
      - web
      - sec

  - name: Create a new Internet Gateway
    oci_network_internet_gateway:
      compartment_id: "{{ item.vcn.compartment_id }}"
      vcn_id: "{{ item.vcn.id }}"
      name: "inet-gw"
      is_enabled: true
    register: gateway
    no_log: true
    loop:
      "{{ network.results }}"

  - name: Create route table to connect internet gateway to the VCN
    oci_network_route_table:
      compartment_id: "{{ item.internet_gateway.compartment_id }}"
      vcn_id: "{{ item.internet_gateway.vcn_id }}"
      name: "inet-route-table"
      route_rules:
        - cidr_block: "{{ zero_cidr }}"
          network_entity_id: "{{ item.internet_gateway.id }}"
    register: inetroute
    no_log: true
    loop:
      "{{ gateway.results }}"

  - name: Set network variables
    set_fact:
      web_network: "{{ network.results[0] }}"
      sec_network: "{{ network.results[1] }}"
      web_inetroute: "{{ inetroute.results[0] }}"
      sec_inetroute: "{{ inetroute.results[1] }}"

  - name: Create web security group
    oci_network_security_group:
      compartment_id: "{{ web_network.vcn.compartment_id }}"
      vcn_id: "{{ web_network.vcn.id }}"
      display_name: 'web security group'
    register: web_security_group

  - name: Configure web security group
    oci_network_security_group_security_rule_actions:
      network_security_group_id: "{{ web_security_group.network_security_group.id }}"
      action: add
      security_rules:
        -
          direction: INGRESS
          is_stateless: false
          protocol: 6
          source: "{{ zero_cidr }}"
          tcp_options:
            destination_port_range:
              min: "{{ item }}"
              max: "{{ item }}"
          description: "Open Port {{ item }}"
    loop:
      - 80
      - 443

  - name: Create Subnets
    oci_network_subnet:
      compartment_id: "{{ web_network.vcn.compartment_id }}"
      vcn_id: "{{ lookup('vars', item + '_network').vcn.id }}"
      availability_domain: "{{ lookup('vars', item + '_availability_domain') }}"
      dns_label: fl
      cidr_block: "{{ net_cidr_block }}"
      route_table_id: "{{ lookup('vars', item + '_inetroute').route_table.id }}"
      security_list_ids:
        - "{{ lookup('vars', item + '_network').vcn.default_security_list_id }}"
    register: subnets
    loop:
      - web
      - sec

  - name: Set subnet variables
    set_fact:
      web_subnet: "{{ subnets.results[0] }}"
      sec_subnet: "{{ subnets.results[1] }}"

  - name: Provision Web Server
    oci_compute_instance:
      name: "{{ web_host_name }}"
      compartment_id: "{{ web_network.vcn.compartment_id }}"
      availability_domain: "{{ web_subnet.subnet.availability_domain }}"
      shape: VM.Standard.A1.Flex
      key_by: [compartment_id, availability_domain, display_name]
      shape_config:
        ocpus: 2
        memory_in_gbs: 2
      image_id: "{{ image_id }}"
      subnet_id: "{{ web_subnet.subnet.id }}"
      create_vnic_details:
        nsg_ids: "{{ web_security_group.network_security_group.id }}"
      metadata:
        ssh_authorized_keys:
          "{{ lookup('file', '~/.ssh/oci-test1-key-2023-10-06.pem.pub' ) }}"
        user_data: "{{ user_override|b64encode }}"
    register: webserver
    tags:
      - web

  - name: Provision Container Server
    oci_compute_instance:
      name: "{{ docker_host_name }}"
      compartment_id: "{{ sec_network.vcn.compartment_id }}"
      availability_domain: "{{ sec_subnet.subnet.availability_domain }}"
      shape: VM.Standard.A1.Flex
      key_by: [compartment_id, availability_domain, display_name]
      shape_config:
        ocpus: 2
        memory_in_gbs: 20
      source_details:
        source_type: image
        image_id: "{{ image_id }}"
        boot_volume_size_in_gbs: 100
      subnet_id: "{{ sec_subnet.subnet.id }}"
      metadata:
        ssh_authorized_keys:
          "{{ lookup('file', '~/.ssh/oci-test1-key-2023-10-06.pem.pub' ) }}"
        user_data: "{{ user_override|b64encode }}"
    register: docker_server
    tags:
      - docker

  - name: Display IPs
    debug:
      msg: "Server instance {{ lookup('vars', item).instance.display_name }} with IP {{ lookup('vars', item).instance.primary_public_ip }}"
    when: lookup('vars', item, default='').instance.id is defined
    loop:
      - webserver
      - docker_server
    tags:
      - web
      - docker
