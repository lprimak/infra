# Hope Website HAProxy Config

    global
        maxconn 256
        # Enable the HAProxy Runtime API - SSL reloads
        stats socket ipv4@localhost:9999 level admin expose-fd listeners

    defaults
        mode http
        timeout connect 5s
        timeout client 50s
        timeout server 50s
        option forwardfor

    frontend tcp-in
        default_backend payara
        bind :::16380 v4v6
        bind :::16443 v4v6 ssl crt "${HOME}/var/ssl-links/hope-fullchain.pem" crt "${HOME}/var/ssl-links/lp-fullchain.pem" alpn h2,http/1.1

        # HTTP -> HTTPS redirection
        http-request redirect scheme https unless { ssl_fc }
        http-request set-header X-Forwarded-Proto https if { ssl_fc }

        # Redirect to static web site
        # starts with hope / lennyprimak
        acl static_website hdr_beg(host) -i hope.nyc lennypr www.lennypr
        # starts with a slash, and can have more slashes after, but nothing at the end
        acl is_root path_reg -i ^/+$
        redirect prefix https://www.hope.nyc.ny.us code 301 if static_website is_root

        # Redirect old me website bookmarks
        acl old_me_website hdr_beg(host) -i me.hope.nyc
        acl old_me_website hdr_beg(host) -i www.me.hope.nyc
        acl wellknown_path path_beg /.well-known
        redirect prefix https://www.hope.nyc.ny.us code 301 if old_me_website !wellknown_path

        # keep let's encrypt requests going
        acl letsencrypt-acl path_beg /.well-known/acme-challenge/
        use_backend payara if letsencrypt-acl

        # Payara 6
        acl payara-p6-acl hdr_beg(host) -i apps-p6
        use_backend payara-p6 if payara-p6-acl

        # Payara admin server
        acl payara-admin-p6 hdr_beg(host) -i admin-p6
        use_backend payara-admin-p6 if payara-admin-p6
        acl payara-admin hdr_beg(host) -i admin
        use_backend payara-admin if payara-admin

        # Jenkins
        acl jenkins hdr_beg(host) -i jenkins
        use_backend jenkins if jenkins

        # Sonatype Nexus
        acl nexus hdr_beg(host) -i nexus
        use_backend nexus if nexus

    backend payara
        # HTTP/2 over clear text
        server server1 localhost:1180 maxconn 32
        # server server1 localhost:1181 maxconn 32 ssl alpn h2 verify none

    backend payara-p6
        server server1 localhost:1380 maxconn 32

    backend payara-admin
        server server1 localhost:1148 maxconn 32 ssl alpn h2 verify none

    backend payara-admin-p6
        server server1 localhost:1348 maxconn 32 ssl alpn h2 verify none

    backend jenkins
        timeout server 4m
        server server1 localhost:8088 maxconn 32
        # Blue Ocean currently doesn't work with HTTP/2 proxying
        # server server1 localhost:8081 maxconn 32 ssl alpn h2 verify none

    backend nexus
        server server1 ipv4@localhost:2181 maxconn 32
