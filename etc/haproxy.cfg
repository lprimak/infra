# Hope Website HAProxy Config

    global
        maxconn 256
        # Enable the HAProxy Runtime API - SSL reloads
        stats socket ipv4@localhost:9999 level admin expose-fd listeners
        crt-base "${HOME}/var/ssl-links"

    defaults
        mode http
        timeout connect 5s
        timeout client 50s
        timeout server 50s
        option forwardfor

    frontend main-web
        default_backend payara
        bind :::16380 v4v6
        bind :::16443 v4v6 ssl crt hope-fullchain.pem crt lp-fullchain.pem crt fl-fullchain.pem alpn h2,http/1.1

        # HTTP -> HTTPS redirection
        http-request redirect scheme https unless { ssl_fc }
        http-request set-header X-Forwarded-Proto https if { ssl_fc }

        # Redirect to static web site
        # starts with hope / lennyprimak
        acl static_website hdr_beg(host) -i hope.nyc lennypr www.lennypr
        # starts with a slash, and can have more slashes after, but nothing at the end
        acl is_root path_reg -i ^/+$
        redirect prefix https://www.hope.nyc.ny.us code 301 if static_website is_root

        # redirect apps root to about.html
        acl apps_website hdr_beg(host) -i apps.hope
        redirect location https://apps.hope.nyc.ny.us/about.html code 302 if apps_website is_root

        # Redirect Hope -> FlowLogix Jenkins
;        acl hope_jenkins hdr_beg(host) -i jenkins.hope
;        redirect location https://jenkins.flowlogix.com code 301 if hope_jenkins is_root

        # Redirect Hope -> FlowLogix Nexus
        acl hope_nexus hdr_beg(host) -i nexus.hope
        redirect location https://nexus.flowlogix.com code 301 if hope_nexus is_root

        # Redirect AdGuard Admin
        acl adguard hdr_beg(host) -i adguard
        redirect location http://nova:2280 code 301 if adguard is_root

        # Redirect old me website bookmarks
        acl old_me_website hdr_beg(host) -i me.hope.nyc
        acl old_me_website hdr_beg(host) -i www.me.hope.nyc
        acl wellknown_path path_beg /.well-known
        redirect prefix https://www.hope.nyc.ny.us code 301 if old_me_website !wellknown_path

        # Flow Logix Starter Redirect
        acl flowlogix-starter-acl hdr_beg(host) -i start.flowlogix.com
        acl path_starts_sg path_reg -i ^/sg
        redirect prefix /sg if flowlogix-starter-acl !path_starts_sg

        # MyOnlineLogbook Redirect
        acl flowlogix-logbook-acl hdr_beg(host) -i logbook.flowlogix.com
        acl path_starts_logbook path_reg -i ^/logbook
        redirect prefix /logbook if flowlogix-logbook-acl !path_starts_logbook

        # Photos - Immich
        acl immich-acl hdr_beg(host) -i photos.hope.nyc
        acl immich-acl hdr_beg(host) -i photos.flowlogix.com
        use_backend photos-local-containers if immich-acl

        # Gitea
        acl gitea-acl hdr_beg(host) -i git.hope.nyc
        acl gitea-acl hdr_beg(host) -i git.flowlogix.com
        use_backend gitea-local-containers if gitea-acl

        # keep let's encrypt requests going
        acl letsencrypt-acl path_beg /.well-known/acme-challenge/
        use_backend payara if letsencrypt-acl

        # Payara 6
        acl payara-alt-acl hdr_beg(host) -i apps-alt
        use_backend payara-alt if payara-alt-acl

        # Payara admin server
        acl payara-admin-alt hdr_beg(host) -i admin-alt
        use_backend payara-admin-alt if payara-admin-alt
        acl payara-admin hdr_beg(host) -i admin
        use_backend payara-admin if payara-admin

        # Jenkins
        acl jenkins hdr_beg(host) -i jenkins
        use_backend jenkins if jenkins

        # Sonatype Nexus
        acl nexus hdr_beg(host) -i nexus
        use_backend nexus if nexus

        acl nexus-docker-public hdr_beg(host) -i docker-public
        use_backend nexus-docker-public if nexus-docker-public

        acl nexus-docker-private hdr_beg(host) -i docker-private
        use_backend nexus-docker-private if nexus-docker-private

    backend payara
        # HTTP/2 over clear text
        server server1 localhost:1180 maxconn 32
        http-response replace-header Location ^http://(.*)$ https://\1
        # server server1 localhost:1181 maxconn 32 ssl alpn h2 verify none

    backend payara-alt
        server server1 localhost:1380 maxconn 32

    backend payara-admin
        server server1 localhost:1148 maxconn 32 ssl alpn h2 verify none

    backend payara-admin-alt
        server server1 localhost:1348 maxconn 32 ssl alpn h2 verify none

    backend jenkins
        timeout server 4m
        server server1 localhost:8088 maxconn 32
        # Blue Ocean currently doesn't work with HTTP/2 proxying
        # server server1 localhost:8081 maxconn 32 ssl alpn h2 verify none

    backend nexus
        server server1 ipv4@localhost:2181 maxconn 32
    backend nexus-docker-public
        http-request set-header X-Forwarded-Proto https
        server server1 ipv4@localhost:8023 maxconn 32
    backend nexus-docker-private
        http-request set-header X-Forwarded-Proto https
        server server1 ipv4@localhost:8024 maxconn 32

    backend photos-local-containers
        http-request set-header X-Forwarded-Proto https
        server server1 ipv4@local-containers:2283 maxconn 32

    backend gitea-local-containers
        http-request set-header X-Forwarded-Proto https
        server server1 ipv4@local-containers:3000 maxconn 32
